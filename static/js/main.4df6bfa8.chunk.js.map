{"version":3,"sources":["components/AddAppointments.js","components/ListAppointments.js","components/SearchAppointments.js","components/App.js","serviceWorker.js","index.js"],"names":["AddAppointments","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","petName","ownerName","aptDate","aptTime","aptNotes","handleChange","bind","assertThisInitialized","handleAdd","e","preventDefault","tempApt","addOneAppointment","setState","toggleForm","value","target","name","defineProperty","react_default","a","createElement","className","formDisplay","onClick","fa","action","id","noValidate","onSubmit","htmlFor","readOnly","type","placeholder","onChange","required","rows","cols","Component","ListAppointments","listAppointment","map","item","key","aptId","deleteAppointment","contentEditable","suppressContentEditableWarning","onBlur","updateInfo","innerText","dist_default","date","parse","format","SearchAppointments","aria-label","searchApts","data-toggle","aria-haspopup","aria-expanded","orderBy","changeOrder","orderDirection","href","role","App","myAppointments","lastIndex","queryText","query","order","direction","tempApts","appt","unshift","filter","apt","_this2","fetch","then","response","json","result","appoinments","_this3","filteredApts","sort","b","toLowerCase","includes","components_AddAppointments","components_SearchAppointments","components_ListAppointments","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4df6bfa8.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport '../css/App.css';\r\nimport { FaPlus} from 'react-icons/fa';\r\n\r\n\r\nclass AddAppointments extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            petName: '',\r\n            ownerName: '',\r\n            aptDate: '',\r\n            aptTime: '',\r\n            aptNotes: ''\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleAdd = this.handleAdd.bind(this);\r\n    }\r\n\r\n    handleAdd(e) {\r\n        e.preventDefault(); // Prevent the form from submitting and eloading the page\r\n        let tempApt = {\r\n            petName: this.state.petName,\r\n            ownerName: this.state.ownerName,\r\n            aptDate: this.state.aptDate + ' ' + this.state.aptTime,\r\n            aptNotes: this.state.aptNotes\r\n        };\r\n\r\n        this.props.addOneAppointment(tempApt);\r\n\r\n        this.setState({\r\n            petName: '',\r\n            ownerName: '',\r\n            aptDate: '',\r\n            aptTime: '',\r\n            aptNotes: ''\r\n        });\r\n        this.props.toggleForm();\r\n\r\n    }\r\n\r\n    handleChange(e) {\r\n        const value = e.target.value;\r\n        const name = e.target.name;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            \r\n           <div className = {\r\n               \"card textcenter mt-3 \" + \r\n               (this.props.formDisplay ? '' : 'add-appintment')\r\n               }\r\n            > \r\n                <div className=\"card-header apt-addheading text-info text-center\"\r\n                     onClick = {this.props.toggleForm} >\r\n                   <FaPlus /> Add Appointment\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                        <form action=\"#\" id=\"aptForm\" noValidate \r\n                            onSubmit={this.handleAdd} >\r\n                            <div className=\"form-group form-row\">\r\n                                <label htmlFor=\"petName\" className=\"col-md-5 col-form-label text-md-right\" readOnly>\r\n                                    Pet Name\r\n                                </label>\r\n                                <div className=\"col-md-3\">\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        name=\"petName\" \r\n                                        placeholder=\"Pet's Name\"\r\n                                        value = {this.state.petName}\r\n                                        onChange = {this.handleChange}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div className=\"form-group form-row\">\r\n                                <label htmlFor=\"ownerName\" className=\"col-md-5 col-form-label text-md-right\" readOnly>\r\n                                    Pet Owner\r\n                                </label>\r\n                                <div className=\"col-md-3\">\r\n                                <input \r\n                                    type=\"text\" \r\n                                    className=\"form-control\" \r\n                                    name=\"ownerName\" \r\n                                    placeholder=\"Owner's Name\"\r\n                                    value = {this.state.ownerName}\r\n                                    onChange = {this.handleChange}\r\n                                  \r\n                                />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group form-row\">\r\n                                <label htmlFor=\"aptDate\" className=\"col-md-5 col-form-label text-md-right\" >\r\n                                    Date\r\n                                </label>\r\n                                <div className=\"col-md-3\">\r\n                                <input \r\n                                    type=\"date\" \r\n                                    className=\"form-control\" \r\n                                    name=\"aptDate\" \r\n                                    id = \"aptDate\"                                   \r\n                                    value = {this.state.aptDate}\r\n                                    onChange = {this.handleChange}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group form-row\">\r\n                                <label htmlFor=\"aptTime\" className=\"col-md-5 col-form-label text-md-right\" >\r\n                                    Time\r\n                                </label>\r\n                                <div className=\"col-md-3\">\r\n                                <input \r\n                                    type=\"time\" \r\n                                    className=\"form-control\" \r\n                                    name=\"aptTime\" \r\n                                    id=\"aptTime\" \r\n                                \r\n                                    value = {this.state.aptTime}\r\n                                    onChange = {this.handleChange}\r\n                                    \r\n                                    required/>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group form-row\">\r\n                                <label htmlFor=\"aptNotes\" className=\"col-md-5 col-form-label text-md-right\" >\r\n                                    Appointment Notes\r\n                                </label>\r\n                                <div className=\"col-md-3\">\r\n                                <textarea \r\n                                    className=\"form-control\" \r\n                                    name=\"aptNotes\" \r\n                                    rows=\"6\" \r\n                                    cols=\"250\" \r\n                                    placeholder=\"Appointment Notes\" \r\n                                    value = {this.state.aptNotes}\r\n                                    onChange = {this.handleChange}\r\n                                >\r\n                                </textarea>\r\n                                </div>\r\n                            </div>\r\n                            {/* Center the button */}\r\n                            <div className=\"form-group form-row align-items-center justify-content-center\"> \r\n                                <button className=\"btn btn-warning d-block\">\r\n                                    SEND\r\n                                </button>\r\n                            </div>\r\n                        </form>           \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default AddAppointments;\r\n","import React, { Component } from 'react';\r\nimport '../css/App.css';\r\n\r\n// import { FaCheck} from 'react-icons/fa';\r\nimport Moment from 'react-moment';\r\n\r\n\r\nclass ListAppointments extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"appointment-list item-list mb-3\">\r\n                {this.props.listAppointment.map( item => (\r\n                    // Each child in a list should have a unique \"key\" prop\r\n                    <div className=\"pet-item col media py-3\" key={item.aptId}>\r\n                        <div className=\"mr-3\">\r\n                            <button className=\"pet-delete btn btn-sm btn-danger\"\r\n                              onClick={() => this.props.deleteAppointment(item)}> \r\n                              X\r\n                                {/* Using third-party component \"react-icons\": \"^3.4.0\" */}\r\n                                {/* <FaCheck /> */}\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"pet-info media-body\">\r\n                            <div className=\"pet-head d-flex\">\r\n                                <span \r\n                                    className=\"pet-name\" \r\n                                    contentEditable \r\n                                    suppressContentEditableWarning\r\n                                    onBlur = {\r\n                                        e => this.props.updateInfo('petName', e.target.innerText, item.aptId)\r\n                                    }                       \r\n                                >\r\n                                    {item.aptId + 1}. {item.petName}\r\n                                </span>\r\n                                <span \r\n                                    className=\"apt-date ml-auto\"\r\n                                    \r\n                                >\r\n                                {/* Using third-party component \"react-moment\": \"^0.8.4\", */}\r\n                                 <Moment\r\n                                   date = {item.aptDate} \r\n                                   parse = \"YYYY-MM-DD hh:mm\"\r\n                                   format = \"ddd DD-MMM-YYYY hh:mma\"\r\n                                  />\r\n                                 \r\n                                </span>\r\n                            </div>\r\n\r\n                            <div className=\"owner-name\">\r\n                                <span className=\"label-item\" >Owner: </span>\r\n                                <span\r\n                                    contentEditable\r\n                                    suppressContentEditableWarning\r\n                                    onBlur = {\r\n                                        e => this.props.updateInfo('ownerName', e.target.innerText, item.aptId)\r\n                                    }\r\n                                >{item.ownerName}</span>\r\n                            </div>\r\n                            <div \r\n                                className=\"apt-notes\" \r\n                                contentEditable\r\n                                suppressContentEditableWarning\r\n                                onBlur = {\r\n                                    e => this.props.updateInfo('aptNotes', e.target.innerText, item.aptId)\r\n                                }\r\n                            >\r\n                                {item.aptNotes}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ListAppointments;\r\n","import React, { Component } from 'react';\r\nimport '../css/App.css';\r\nimport { FaSistrix } from \"react-icons/fa\";\r\n\r\n\r\nclass SearchAppointments extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"search-appointments row justify-content-center my-4\">\r\n                <div className=\"col-md-6\">\r\n                    <div className=\"input-group\">\r\n                    {/* The aria-label attribute is used to define a string that labels the current element. \r\n                        Use it in cases where a text label is not visible on the screen. */}\r\n                        <div className=\"search-bar\"> \r\n                            <i className=\"search-icon\"><FaSistrix /></i>\r\n                            <input \r\n                                type = \"text\" \r\n                                id=\"searchApts\" \r\n                                className=\"form-control\" \r\n                                aria-label=\"Search Appointments\" \r\n                                onChange = {e => this.props.searchApts(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"input-group-append\">\r\n                            <button type = \"button\" \r\n                                className = \"btn btn-warning dropdown-toggle\"\r\n                                data-toggle = \"dropdown\"\r\n                                aria-haspopup = \"true\"\r\n                                aria-expanded = \"false\" \r\n                            >\r\n                                Sort by: <span className=\"caret\"></span>\r\n                            </button>\r\n\r\n                            <div className=\"sort-menu dropdown-menu dropdown-menu-right\">\r\n                                <button className = {\r\n                                    \"sort-by dropdown-item \" + (this.props.orderBy === 'petName' ? 'active' : '')\r\n                                    } \r\n                                    onClick = {e => this.props.changeOrder('petName', this.props.orderDirection)}\r\n                                    href=\"#\">\r\n                                    Pet Name\r\n                                </button>\r\n                                <button className = {\r\n                                    \"sort-by dropdown-item \" + (this.props.orderBy === 'aptDate' ? 'active' : '')\r\n                                    } \r\n                                    onClick = {e => this.props.changeOrder('aptDate', this.props.orderDirection)}\r\n                                    href=\"#\">\r\n                                    Date\r\n                                </button>\r\n                                <button className = {\r\n                                    \"sort-by dropdown-item \" + (this.props.orderBy === 'ownerName' ? 'active' : '')\r\n                                    } \r\n                                    onClick = {e => this.props.changeOrder('ownerName', this.props.orderDirection)}\r\n                                    href=\"#\"\r\n                                >\r\n                                    Owner\r\n                                </button>\r\n                                {/* Seperate button groups */}\r\n                                <div role=\"separator\" className=\"dropdown-divider\" />\r\n\r\n                                <button className = {\r\n                                    \"sort-by dropdown-item \" + (this.props.orderDirection === 'ascending' ? 'active' : '')\r\n                                    } \r\n                                    onClick = {e => this.props.changeOrder(this.props.orderBy, 'ascending')}\r\n                                    href=\"#\">\r\n                                    Ascending\r\n                                </button>\r\n                                <button className = {\r\n                                    \"sort-by dropdown-item \" + (this.props.orderDirection === 'descending' ? 'active' : '')\r\n                                    } \r\n                                    onClick = {() => this.props.changeOrder(this.props.orderBy, 'descending')}\r\n                                    href=\"#\">\r\n                                    Descending\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default SearchAppointments;\r\n","import React, { Component } from 'react';\nimport '../css/App.css';\nimport AddAppointments from './AddAppointments';\nimport ListAppointments from './ListAppointments';\nimport SearchAppointments from './SearchAppointments';\n\n// import {findIndex, without} from 'lodash';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      myAppointments: [],\n      lastIndex: 0,\n      formDisplay: false,\n      orderDirection: \"ascending\",\n      orderBy: 'aptDate',\n      queryText:''\n    }\n    this.deleteAppointment = this.deleteAppointment.bind(this);\n    this.toggleForm = this.toggleForm.bind(this);\n    this.addOneAppointment = this.addOneAppointment.bind(this);\n    this.changeOrder = this.changeOrder.bind(this);\n    this.searchApts = this.searchApts.bind(this);\n    this.updateInfo = this.updateInfo.bind(this);\n  }\n\n  toggleForm() {\n    this.setState({\n      formDisplay: !this.state.formDisplay\n    })\n  }\n\n  searchApts(query){\n    this.setState ({\n      queryText: query\n    })\n  }\n\n  changeOrder(order, direction){\n    this.setState({\n      orderBy: order,\n      orderDirection: direction\n    });\n  }\n\n  updateInfo(name,value,id){\n    let tempApts = this.state.myAppointments;\n    // let aptIndex = findIndex(this.state.myAppointments, {aptId: id});\n    // tempApts[aptIndex][name] = value;\n    tempApts[name] = value;\n    this.setState({\n      myAppointments: tempApts\n    })\n  }\n\n  addOneAppointment(appt) {\n    let tempApts = this.state.myAppointments;\n    appt.aptId = this.state.lastIndex;\n    tempApts.unshift(appt);\n    this.setState({\n      myAppointments: tempApts,\n      lastIndex: this.state.lastIndex + 1\n    })\n\n  }\n\n  deleteAppointment(appt) {\n    let tempApts = this.state.myAppointments;\n    // Originally in the tutorial, the method without from lodash is used to return an array without the record deleted\n    // tempApts = without(tempApts, appt);\n\n// To improve speed and performance, JavaScript itself has many great built-in methods and functions that can replace all the functionality of lodash or other libraries.\n    tempApts = tempApts.filter(apt => (apt !== appt));\n\n    this.setState({\n      myAppointments: tempApts\n    })\n  }\n\n  // Use the lifecycle method componentDidMount() to fetch the data from an external sourse,\n  // after the component is rendered correctly, componentDidMount() function is called\n  componentDidMount(){\n    // As far as JS is concerned, once our app all gets assembled, the data.json file will be in the same folder as the current document\n    fetch('./data.json')\n      .then(response => response.json()) //Get the JSON file of the response to a request to a server \n      .then(result => { // Again use the then promise method to take that result and process it by creating a variable appoinments\n        // Use JS map function to go through each of the elements in JSON file and return them, just unprocessed\n        const appoinments = result.map(item => {\n          // Add an appointment ID variable to the list\n          item.aptId = this.state.lastIndex;\n          // Use the setState method to pass in an object that I want to modify\n          this.setState({\n            lastIndex: this.state.lastIndex + 1\n          })\n          return item;\n        });\n        this.setState({\n          myAppointments: appoinments\n        });\n      });\n  }\n\n  render() { \n    \n    let order;\n    let filteredApts = this.state.myAppointments;\n    if(this.state.orderDirection === 'ascending') {\n      order = 1;\n    } else {\n      order = -1;\n    }\n    \n    filteredApts = filteredApts.sort((a,b) => {\n      if(a[this.state.orderBy].toLowerCase() < b[this.state.orderBy].toLowerCase()){\n        return -1 * order;\n      }else{\n        return 1 * order;\n      }\n    }).filter(item => {\n      return(\n        item['petName'].toLowerCase().includes(this.state.queryText.toLowerCase()) || \n        item['ownerName'].toLowerCase().includes(this.state.queryText.toLowerCase()) ||\n        item['aptDate'].includes(this.state.queryText)\n      );\n    })\n    \n\n    // Higher-order functions don't allow to modify arrays directly\n  /* filteredApts = filteredApts.filter(item => {\n      return(\n        item['petName'].toLowerCase().includes(this.state.queryText.toLowerCase()) || \n        item['ownerName'].toLowerCase().includes(this.state.queryText.toLowerCase()) ||\n        item['aptNotes'].toLowerCase().includes(this.state.queryText.toLowerCase())\n      );\n    })\n  */\n\n    return (\n      <main className=\"page bg-white\" id=\"petratings\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12 bg-white\">\n              <div className=\"container\">\n                \n                {/* Objects are not valid as a React child  */}\n                {/* Pass along props to the sub-component */}\n                <AddAppointments \n                  formDisplay = {this.state.formDisplay} \n                  toggleForm = {this.toggleForm}\n                  addOneAppointment = {this.addOneAppointment}\n                />\n\n                <SearchAppointments \n                  orderBy = {this.state.orderBy}\n                  orderDirection = {this.state.orderDirection}\n                  changeOrder = {this.changeOrder}\n                  searchApts = {this.searchApts}\n                />\n\n                <ListAppointments  \n                  listAppointment = {filteredApts}                \n                  deleteAppointment = {this.deleteAppointment}\n                  updateInfo = {this.updateInfo}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n       \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './css/index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'jquery/dist/jquery.js';\r\nimport 'popper.js/dist/umd/popper.js';\r\nimport 'bootstrap/dist/js/bootstrap.js';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n\r\nserviceWorker.unregister();\r\n\r\n"],"sourceRoot":""}